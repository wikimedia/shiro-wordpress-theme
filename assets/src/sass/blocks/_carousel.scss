@import "../../../../node_modules/@splidejs/splide/src/css/core";
@import "../helpers/mixins/mixins-buttons";

.shiro-carousel {
	--carousel-side-padding: #{fluid( 20, 40 )};
	--carousel-vertical-padding: #{fluid( 20, 128 )};
	--carousel-arrow-size: #{rem(44)};
	--carousel-arrow-position: #{fluid( 16, 44 + 32 )}; // arrow size + 32 margin.
	--carousel-control-bottom-position: #{rem(16)};
	container-type: inline-size;
	// stylelint-disable selector-class-pattern

	.splide__arrow {
		@include button-transparent;
		background: radial-gradient( var(--wp--preset--color--main) 50%, var(--wp--preset--color--base) 50% );
		border: 2px solid var(--wp--preset--color--border-light);
		border-radius: 50%;
		bottom: var(--carousel-control-bottom-position);
		box-sizing: content-box;
		height: var(--carousel-arrow-size);
		padding: 0;
		position: absolute;
		z-index: 1;

		&--prev {
			left: var( --carousel-side-padding );
			transform: rotate(180deg);
		}

		&--next {
			right: var( --carousel-side-padding );
		}

		&:focus,
		&:hover {
			border-color: var(--wp--preset--color--border-light);
			border-radius: 50%;
			box-shadow: none;
		}

		svg {
			fill: var(--wp--preset--color--base);
			height: 100%;
			width: 100%;
		}
	}

	.splide__arrow[disabled] {
		svg {
			fill: var(--wp--preset--color--black-25);
		}
	}

	.wp-block-group.has-background.splide__slide {
		padding-bottom: max( rem(80), var( --carousel-vertical-padding ) );
		padding-inline: var( --carousel-side-padding );
		padding-top: min( rem(115), var( --carousel-vertical-padding ) );
	}

	.splide__pagination {
		background: rgba(0, 0, 0, 0.3);
		bottom: calc( var(--carousel-control-bottom-position) + 0.5rem );
		border-radius: rem(15);
		display: flex;
		gap: rem(16);
		left: 50%;
		max-width: calc( 100% - ( ( var(--carousel-arrow-size) + var( --carousel-side-padding ) + #{rem(20)} ) * 2 ) );
		padding: rem(6) rem(10);
		position: absolute;
		transform: translateX(-50%);
		width: max-content;
		z-index: 1;

		button {
			background-color: var(--wp--preset--color--base);
			border: 1px solid var(--wp--preset--color--base);
			border-radius: 50%;
			cursor: pointer;
			height: rem(16);
			padding: 0;
			width: rem(16);

			&.is-active {
				background-color: transparent;
				border-color: var(--wp--preset--color--base);
			}
		}
	}

	&:has(.wp-block-query).is-active {
		--carousel-side-padding: 0px;
		padding-bottom: rem(80);

		.splide__list {
			display: flex !important;
			gap: 0 !important;
		}

		.post {
			border: 0 none;
			padding-top: 0;
		}
	}

	// Override bottom margin from blocks used as slides
	.splide__list > * {
		margin-bottom: 0;
	}
}

.shiro-carousel:not(.alignfull) {
	&:not(.alignwide) {
		@include media(">=sm_desktop") {
			.splide__arrow {
				@container ( width >= #{ map-get( $breakpoints, "content" ) } ) {
					top: 50%;
					bottom: initial;

					&:is(.shiro-carousel:has(.wp-block-query) .splide__arrow) {
						top: 40%;
					}
				}

				&--prev {
					@container ( width >= #{ map-get( $breakpoints, "content" ) } ) {
						left: calc( -1 * var( --carousel-arrow-position ) ); // Get the negative value.
						transform: translateY(-50%) rotate(180deg);
					}
				}

				&--next {
					@container ( width >= #{ map-get( $breakpoints, "content" ) } ) {
						right: calc( -1 * var( --carousel-arrow-position ) ); // Get the negative value.;
						transform: translateY(-50%);
					}
				}
			}
		}
	}

	&.alignwide {
		@include media(">=wide") {
			.splide__arrow {
				@container ( width >= #{ map-get( $breakpoints, "desktop" ) } ) {
					top: 50%;
					bottom: initial;

					&:is(.shiro-carousel:has(.wp-block-query) .splide__arrow) {
						top: 40%;
					}
				}

				&--prev {
					@container ( width >= #{ map-get( $breakpoints, "desktop" ) } ) {
						left: calc( -1 * var( --carousel-arrow-position ) ); // Get the negative value.
						transform: translateY(-50%) rotate(180deg);
					}
				}

				&--next {
					@container ( width >= #{ map-get( $breakpoints, "desktop" ) } ) {
						right: calc( -1 * var( --carousel-arrow-position ) ); // Get the negative value.;
						transform: translateY(-50%);
					}
				}
			}
		}
	}
}

.shiro-carousel.alignfull {
	--carousel-arrow-position: #{fluid( 16, 40 )};

	@include media(">=wide") {
		.splide__arrow {
			@container ( width >= #{ map-get( $breakpoints, "desktop" ) } ) {
				top: 50%;
				bottom: initial;

				&:is(.shiro-carousel:has(.wp-block-query) .splide__arrow) {
					top: 40%;
				}
			}

			&--prev {
				@container ( width >= #{ map-get( $breakpoints, "desktop" ) } ) {
					left: var( --carousel-arrow-position );
					transform: translateY(-50%) rotate(180deg);
				}
			}

			&--next {
				@container ( width >= #{ map-get( $breakpoints, "desktop" ) } ) {
					right: var( --carousel-arrow-position );
					transform: translateY(-50%);
				}
			}
		}
	}
}
